name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 전송할 파일을 담을 디렉토리
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      # appspec.yml start.sh Copy
      - name: Copy appspec
        run: cp appspec.yml start.sh ./deploy/

      # create .env file
      - name: Create .env file
        run: 
          touch .env
          
          echo "S3_ACCESS_KEY=${{secrets.S3_ACCESS_KEY}}" >> .env
          echo "S3_SECRET_KEY=${{secrets.S3_SECRET_KEY}}" >> .env
          echo "S3_BUCKET_NAME=${{secrets.S3_BUCKET_NAME}}" >> .env
          echo "DB_URL=${{secrets.DB_URL}}" >> .env
          echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
          echo "CLOUDFRONT_URL=${{secrets.CLOUDFRONT_URL}}" >> .env


      # copy .env file
      - name: copy .env file
        run: cp .env ./deploy/

      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./build.zip ./deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws s3 cp --region ap-northeast-2 ./build.zip s3://numble4-bucket/server/build.zip

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws deploy create-deployment --application-name NumbleDeploy --deployment-group-name Github-Actions-Deploy --file-exists-behavior OVERWRITE --s3-location bucket=numble4-bucket,bundleType=zip,key=server/build.zip --region ap-northeast-2
